input {
        stdin { }
}
filter {
      grok {
        # dupond15;Jean Dupond;170321135;170
        match => [ "message", "%{NOTSPACE:uid};%{GREEDYDATA};%{INT:quotaused};%{INT:nbfiles}(;\[time:%{NUMBER:timestamp}\])?" ]
      }
        

      if "_grokparsefailure" not in [tags] {

      	if [timestamp] {
            date {
                match => [ "timestamp" , "UNIX" ]
                timezone => "Europe/Paris"
                remove_field => [ "timestamp" ]
            }
        }

        if [uid] {
					mutate {
            lowercase => [ "uid" ]
        	}

					elasticsearch {
							hosts => ["localhost"]
							query => "_type:ldap AND _id:%{uid}"
							sort => ""
							fields => {
											__VOS_ATTRIBUTS_HASHES__
							}                               
					} 

					if ![query_failed] {
						anonymize {
								algorithm => "SHA1"
								fields => [ "uid" ]
								key => "PASSWORD"
						}                               
						
						# Traduction edupersonprimaryaffiliation dans un format lisible
						# utilise le fichier mapping : maps/eduPersonPrimaryAffiliation.yaml 
						# exemple du fichier eduPersonPrimaryAffiliation.yaml, une ligne par mapping 
						#     "student": "Ã©tudiant"
						#
						#if [edupersonprimaryaffiliation] {
						#       translate {
						#               field => "edupersonprimaryaffiliation"
						#               destination => "edupersonprimaryaffiliationReadable"
						#               dictionary_path => "maps/eduPersonPrimaryAffiliation.yaml"
						#               exact => true
						#               fallback => "INCONNU"
						#       }
						#}

					} else {
							mutate {
									add_field => { "no_ldap" => "%{uid}" }
							}
					} 
				}
    	}
}
output {
      if "_grokparsefailure" not in [tags] {

				if [no_ldap] {
        	stdout {
            codec => line { format => "pas de LDAP pour [%{no_ldap}]" } 
          }
        } else {

#                       stdout { 
#                                codec => rubydebug      
#                       }
				elasticsearch {
        	hosts => [ "localhost" ]
          document_type => "bulstats"
        }
				}
      } else {
        stdout {
        	codec => line { format => "Erreur parsing : %{message}" }
        }
    	}
}

