# 
# Use by ../script/update-attributes.sh
# logstash configuration to update, add, remove attributes form an existing eslactisearch index
input {
	elasticsearch {
	  hosts => ["localhost"]
	  index => "__INDEX_FROM__"
		docinfo => true
	}
}
filter {
	##
	## Add GeoIP
	##
	#if [clientip] {
	#	geoip {
    #      database => "/home/elasticsearch/conf/GeoLiteCity.dat"
	#      source => "clientip"
	#      target => "geoip"	
	#   }
	#   mutate {
	#  	  convert => [ "[geoip][coordinates]", "float" ]	
 	#   }
	#}

	##
	## Remove some attributes
	##
	#mutate {
	#  	remove_field => [ "[geoip][ip]", "[geoip][country_code2]", "[geoip][country_code3]"]
	#}

	##
	## Rename some attributes
	##
	#mutate {
	#  	rename => [ "name", "browser" ]
	#}

	##
	## Add fname to "esup4" document if you were an early adopter 
	## and thus hadn't this attribute added
	##
  #if [@metadata][_type]=="esup4" and ![fname] {
  #  grok {
  #          match => [ "request", ".*pCt=(?<fname>[^\\.]*).*" ]
  #          match => [ "request", "^/(?!Login).*p/(?<fname>[^\\.]*).*" ]
  #          keep_empty_captures => true
  #          tag_on_failure => ["no_fname"]
  #  }
  #}

}
output {
	##
	## debug to standard output
	##
	#stdout { 
	#  codec => rubydebug	 
	#}

	#
	# Write to elasticsearch
	#
	elasticsearch {
	  host => ["localhost"]
	  ## If you defined an elasticsearch cluster uncomment the following line
	  #cluster => "Agimus"
		## protocol is needed if your elasticsearch has multicast disabled
	  #protocol => "transport"
    index => "%{[@metadata][_index]}"
    document_type => "%{[@metadata][_type]}"
    document_id => "%{[@metadata][_id]}"
	}
}
