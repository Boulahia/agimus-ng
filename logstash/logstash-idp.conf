input {
	stdin {
	}
}

filter {
	grok {
		match => {"message" => "(?<timestamp>[0-9]{8}T[0-9]{6}Z)\|%{DATA:requestBinding}\|(?<requestId>_[0-9a-zA-Z]+)?\|(http|https)://%{DATA:service}\|%{DATA:messageProfileId}\|%{DATA:identityProvider}\|%{DATA:responseBinding}\|(?<responseId>_[0-9a-zA-Z]+)\|(?<uid>[A-Za-z0-9-]{3,})\|%{DATA:authNMethod}\|(?<ldapAttributes>([a-zA-Z]+,)*)\|(?<nameIdentifier>_[0-9a-zA-Z]+)?\|(?<assertionIds>(_[0-9a-zA-Z]+,)*)?\|"}
	}

	date {
		match => ["timestamp", "yyyyMMdd'T'HHmmssZ"]
	}

	mutate {
		remove_field => ["requestBinding", "requestId", "messageProfileId", "uidity_provider", "responseBinding", "responseId", "authNMethod", "ldapAttributes", "nameuidifier", "assertionIds", "fields"]
		lowercase => ["service"]
	}

	if [uid] =~ /.+/ {
		mutate {
			lowercase => ["uid"]
		}

		elasticsearch {
			hosts => ["localhost"]
			query => "_type:ldap AND _id:%{uid}"
			sort => ""
			fields => {
				__VOS_ATTRIBUTS_HASHES__
			}
		}

		if ![query_failed] {
			anonymize {
				algorithm => "SHA1"
					fields => [ "uid" ]
					key => "PASSWORD"
			}
		} else {
			mutate {
				add_field => { "no_ldap" => "%{uid}" }
			}
		}
	} else {
		mutate {
			add_field => { "no_trace" => "%{agimus}" }
		}
	}
}

output {
	if "_grokparsefailure" not in [tags] {
		if [no_trace] {
			stdout {
				codec => line {
					format => "Pas de TRACE pour %{no_trace}"
				}
			}
		} else if [no_ldap] {
			stdout {
				codec => line {
					format => "Pas de LDAP pour %{no_ldap}"
				} 
			}
		} else {
			elasticsearch {
				hosts => [ "localhost" ]
				document_type => "idp"
			}
		}
	} else {
		stdout {
			codec => line {
				format => "probleme analyse grok pour %{message}"
			}
		}
	}
}
