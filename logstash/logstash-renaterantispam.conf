#
# Utiliser ce fichier avec les fichier de logs fourni par le service antispam Renater
# Attention, par défaut, les logs ne contiennent pas l'année. Il faut l'ajouter dans le script de traitement
# Ligne d'exemple : 
#  2017-Sep 10 00:00:01 194.214.201.9 mxb1-2/smtpd[65464]: NOQUEUE: milter-reject: RCPT from unknown[113.160.248.67]: 554 5.7.1 Service unavailable; Client host 113.160.248.67 blocked using zen.dnsbl; from=<oddandirish@eircom.net> to=<john.doe@univ.fr> proto=ESMTP helo=<static.vnpt.vn>
#

input {
	stdin {
	}
}
filter {
	# Double filtrages : tags + rbl
	grok {
		match => { "message" => ["(?<datetime>%{YEAR}\-%{MONTH} +%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}).*domain\=%{HOSTNAME:maildomain},.*action\=%{WORD:mailaction},.*status\=%{WORD:mailstatus},.*tag\=\[?%{DATA:mailtag}\]?,.*" , "(?<datetime>%{YEAR}\-%{MONTH} +%{MONTHDAY} %{HOUR}:%{MINUTE}:%{SECOND}).*domain\=%{HOSTNAME:maildomain},.*(?<rbl>rbl:zen.dnsbl).*"] }
	}

	date{
		match => ["datetime","yyyy-MMM  d HH:mm:ss","yyyy-MMM d HH:mm:ss"]
	}

	# Si on a detecté une ligne rejettée par RBL on place les paramètres suivants pour être conforme aux lignes avec tag
	if [rbl] {
		mutate {
			add_field => {
				"mailaction" => "reject"
				"mailstatus" => "rbl"
				"mailtag" => "RBL"
			}
			remove_field => [rbl]
		}
	}

	mutate {
		lowercase => ["tag"]
	}
}
output {
	if "_grokparsefailure" not in [tags] {
		elasticsearch {
            hosts => [ "localhost" ]
			document_type => "renaterantispam"
		}
# To DEBUG print to STDOUT
#		stdout {
#			codec => rubydebug
#		}

	}
}
